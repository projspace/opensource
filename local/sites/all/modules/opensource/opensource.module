<?php

/**
 * Implementation of hook_form_alter
 */
function opensource_form_alter(&$form, &$form_state, $form_id) {
 // If we have a lead image, we know we should include an /imce upload link
 if($form['field_lead_image']) {
  $form['imce_link'] = array(
    '#type' => 'markup',
    '#weight' => -10,
    '#value' => l("Upload Images", "imce", array('attributes' => array('target' => '_blank'))),
  );
 }
}

/**
 * Implementation of hook_block
 */
function opensource_block($op = 'list', $delta = 0, $edit = array()) {
  switch($op) {
    case "list":
      $blocks = array();
      $blocks['foobar'] = array('info' => 'Dummy Block');
      $blocks['opensource-social-links'] = array(
        'info' => 'opensource: Social Links',
      );
      $blocks['opensource-reader-survey'] = array(
        'info' => 'Annual Reader Survey',
      );
      return $blocks;
    case "view":
      if($delta == 'opensource-social-links'){
        $block = array(
          'subject' => '<none>',
          'content' => opensource_display_social_block(),
        );
      }
      if($delta == 'opensource-reader-survey'){
        $block = array(
          'subject' => 'Annual Reader Survey',
          'content' => opensource_display_survey_block(),
        );
      }

      return $block;
  }
}

function opensource_display_social_block() {
  $links = array();
  $links['twitter'] = array(
    'href' => 'http://twitter.com/opensourceway',
    'title' => theme_image('sites/all/themes/sitetheme/images/twitter.jpg'),
    'attributes' => array('target' => '_blank'),
    'html' => TRUE,
  );
  $links['facebook'] = array(
    'href' => 'http://facebook.com/pages/opensourcecom/162962298056',
    'title' => theme_image('sites/all/themes/sitetheme/images/facebook.jpg'),
    'attributes' => array('target' => '_blank'),
    'html' => TRUE,
  );
  $links['identica'] = array(
    'href' => 'http://identi.ca/opensourceway',
    'title' => theme_image('sites/all/themes/sitetheme/images/identica.png'),
    'attributes' => array('target' => '_blank'),
    'html' => TRUE,
  );
  $links['flickr'] = array(
    'href' => 'http://www.flickr.com/photos/opensourceway',
    'title' => theme_image('sites/all/themes/sitetheme/images/flickr_24x24.jpg'),
    'attributes' => array('target' => '_blank'),
    'html' => TRUE,
  );
  $links['youtube'] = array(
    'href' => 'http://www.youtube.com/opensourceway',
    'title' => theme_image('sites/all/themes/sitetheme/images/youtube.jpg'),
    'attributes' => array('target' => '_blank'),
    'html' => TRUE,
  );
  $links['rss'] = array(
    'href' => 'http://opensource.com/feed',
    'title' => theme_image('sites/all/themes/sitetheme/images/osdc_rss_24x24.png'),
    'attributes' => array('target' => '_blank'),
    'html' => TRUE,
  );

  $output = theme_links($links, array('class' => 'social-links'));
  $output .= l(theme_image('sites/all/themes/sitetheme/images/email-signup.png'), 'https://engage.redhat.com/forms/opensourcedotcom-subscription',
               array('html' => TRUE, 'attributes' => array('class' => 'newsletter', 'target' => '_blank')));
  // @TODO: Reimplement this when Red Hat approves
  $output .= drupal_get_form('opensource_eloqua_form');
  return $output;
}

function opensource_display_survey_block(){
  return l('Take our Annual Reader Survey by January 27', 'life/12/1/take-our-reader-survey-help-us-improve-opensourcecom',
           array('attributes' => array('title' => 'Annual Reader Survey', 'alt' => 'Annual Reader Survey')));
}

function opensource_init(){
  if(array_key_exists('success', $_REQUEST)) {
    drupal_set_message('Thank you. You have been subscribed to our weekly email.');
  }
}

function opensource_eloqua_form(){
  // Build the Redirect
  $redirect = url('thank-you-subscription');

  $form['C_EmailAddress'] = array(
    '#type' => 'textfield',
    '#default_value' => $object['foo'],
    '#size' => 24,
    '#maxlength' => 96,
  );
  $form['elqFormName'] = array(
    '#type' => 'hidden',
    '#value' => 'opensourcedotcom-subscription',
  );

  $form['elqSiteID'] = array(
    '#type' => 'hidden',
    '#value' => 1795,
  );

  $form['sendToURL'] = array(
    '#type' => 'hidden',
    '#value' => check_url($redirect),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Sign Up'),
  );
  $form['#action'] = 'https://secure.eloqua.com/e/f2.aspx';
  $form['#id'] = 'opensourcedotcom-subscription';

  return $form;
}

function opensource_eloqua_form_validate($form, &$form_state) {
  if ($form_state['values']['c_EmailAddress'] == '') {
    form_set_error('name', t('You must enter a valid email address.'));
  }
}

function opensource_cron() {
  // Log what we are going to close.
  $time = time() - 60 * 60 * 24 * 90;
  $debug = db_query("SELECT nid, created FROM {node} WHERE created < %d AND type = 'post'", $time);
  while($node = db_fetch_object($debug)){
    $params = array('!nid' => $node->nid, '!created' => format_date($node->created), '!target' => format_date($time));
    watchdog('opensource_cron', "!target - Closed comments on node/!nid: Created on !created", $params);
  }

  // Closes all comments on nodes which are 90 days old.
  db_query("UPDATE {node} n SET comment = 0 WHERE n.created < %d AND n.type = 'post'", $time);
}
