<?php

/**
 * @file
 * Custom points code for opensource.com
 */

/**
 * Implementation of hook_userpoints
 *
 * This checks various values before awarding points such as the daily limit.
 */

function opensource_points_userpoints($op, &$params) {
  global $user;
  
  switch($op){
    case 'points before':
      $query = "SELECT SUM(points) FROM {userpoints} WHERE last_update >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) AND uid = %d";
      $points_today = db_result(db_query($query, $params['uid']));
      
      // If the user has earned more than points today and it is the currently logged in user.
      if($points_today >= 10 && $user->uid == $params['uid']){
        drupal_set_message("Sorry, you have reached the maximum number of 10 points you can be awarded in one day.", "status", false);
        return false;
      }
      
  }
}

/**
 * Implementation of hook_mail_alter
 *
 * This checks that a user has opted in to receive the points notification mail.
 */
function opensource_points_mail_alter(&$message){
  switch($message['id']){
    case 'userpoints_role_userpoints_role':
      // If the user has not opted in to this mail send, don't send it.
      $user = user_load(array('mail' => $message['to']));
      if(!$user->profile_point_notifications){
        watchdog('opensource_points', 'A message was going to be sent to %mail but the user elected not to receive notifications.', array('%mail' => $message['to']));
        $message['to'] = 'dev-null@opensource.com';
      }
  }
}

function opensource_points_user($op, &$edit, &$account, $category = NULL) {
  switch($op) {
    case 'update':
      // Only act if roles are being added.
      if(count($edit['roles']) > count($account->roles)){        
        // Define the roles that makeup earned points roles.
        // @TODO: Make this more dynamic
        $earned = array('Community Member', 'Newbie', 'Open Enthusiast', 'Rock Star');
        
        foreach($account->roles as $key => $value) {
          // If the roles are any of the points eligible roles, then grab the ID
          if(in_array($value, $earned)){
            // If the roles already exist in the edit array (as they would), remove them.
            unset($edit['roles'][$key]);
          }
        }
      }
  }
}

function opensource_points_form_comment_form_alter(&$form, &$form_state, $form_id) {
  if(!$form['uid']['#value']) {
    $form['login-register'] = array(
      '#type' => 'markup',
      '#value' => l('Login or Register', 'user') . ' ' . t('to earn points for your comments.'),
      '#weight' => -10,
    );
  }
}