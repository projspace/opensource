<?php

/**
 * @file
 * Add support for OpenID to the Legal Module and Anonymous comments.
 */

/**
 * Implements hook_form_alter().
 */
function legal_openid_form_alter(&$form, &$form_state, $form_id) {
  global $user;
  if ($form_id == 'user_login') {
    $required_value = (!empty($form_state['input']['openid_identifier']));
    $form['legal_checkbox'] = array(
      '#type' => 'checkbox',
      '#required' => $required_value,
      '#title' => t('Accept the !terms to continue.  You are licensing your contribution(s) as CC-BY-SA.', array('!terms' => l(t('Terms of Use'), 'legal'))),
      '#weight' => -0.9,
      '#prefix' => '<span class="openid-legal-checkbox">',
      '#suffix' => '</span>',
    );
    array_unshift($form['#validate'], 'legal_openid_user_login_validate');

    // Add the JavaScript so the checkbox only shows when the openid login
    // is present.
    drupal_add_js(drupal_get_path('module', 'legal_openid') . '/legal_openid.js');
  }
  // Only anonymous users on the comment form.
  elseif ($form_id == 'comment_node_article_form' && $user->uid == 0) {
    $form['legal_checkbox'] = array(
      '#type' => 'checkbox',
      '#required' => TRUE,
      '#title' => t('Accept the !terms to continue.  You are licensing your contribution(s) as CC-BY-SA.', array('!terms' => l(t('Terms of Use'), 'legal'))),
      '#weight' => 1,
    );
    $form['#validate'][] = 'legal_openid_comment_form_validate';
  }
}

/**
 * OpenID login form validation callback.
 */
function legal_openid_user_login_validate($form, &$form_state) {
  if ($form_state['values']['legal_checkbox'] == 0 && isset($form_state['values']['openid_identifier'])) {
    form_set_error('legal_checkbox', t('Please accept the terms of use before logging in.'));
  }
}

/**
 * OpenID comment form validation callback.
 */
function legal_openid_comment_form_validate($form, &$form_state) {
  global $user;
  if ($user->uid == 0 && $form_state['values']['legal_checkbox'] == 0) {
    form_set_error('legal_checkbox', t('Please accept the terms of use before before leaving a comment.'));
  }
}
